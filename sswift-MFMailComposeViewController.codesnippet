<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>MFMailComposeViewController</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>CodeBlock</string>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>    // MARK: MFMailComposeViewController
    
    func presentModalMailComposerViewController(animated: Bool) {
        guard MFMailComposeViewController.canSendMail() else {
            &lt;#can't send emails#&gt;
            return
        }
        
        let composeVC = MFMailComposeViewController()
        composeVC.mailComposeDelegate = self
        composeVC.setToRecipients(&lt;#recipients#&gt;)
        composeVC.setSubject(&lt;#subject#&gt;)
        composeVC.setMessageBody(&lt;#body#&gt;, isHTML: false)
        
        composeVC.navigationBar.tintColor = &lt;#color#&gt;
        composeVC.navigationBar.titleTextAttributes = [NSForegroundColorAttributeName : &lt;#color#&gt;]
        present(composeVC, animated: true, completion: nil)
    }
    
    // MARK: MFMailComposeViewControllerDelegate
    
    func mailComposeController(_ controller: MFMailComposeViewController, didFinishWith result: MFMailComposeResult, error: Error?) {
        if result == .failed {
            &lt;#error#&gt;
        }
        controller.dismiss(animated: true, completion: nil)
    }</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>449FB7DE-54FE-4AFA-94AB-F7401AB5A5C8</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string>MFMailComposeViewController snippet for Swift</string>
	<key>IDECodeSnippetTitle</key>
	<string>sswift-MFMailComposeViewController</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
